name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Quality Control and Linting
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markdownlint
        run: npm install -g markdownlint-cli

      - name: Lint Markdown files
        run: markdownlint "**/*.md" --config .markdownlint.json || true

      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
          check-modified-files-only: 'yes'

  # Typst Compilation Test
  compile-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Typst
        uses: typst-community/setup-typst@v3
        with:
          typst-version: '0.13.0'

      - name: Install fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-dejavu fonts-liberation

      - name: Compile main thesis
        run: typst compile thesis.typ

      - name: Test sample chapter compilation
        run: typst compile sample-chapter.typ

      - name: Upload compiled PDF
        uses: actions/upload-artifact@v4
        with:
          name: compiled-thesis
          path: thesis.pdf

  # Template Validation
  validate-template:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install validation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests

      - name: Validate template structure
        run: python scripts/validate_template.py

      - name: Check package versions
        run: python scripts/check_packages.py

  # Documentation Build
  docs-build:
    runs-on: ubuntu-latest
    needs: [quality-check, compile-test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install docs dependencies
        run: |
          npm install -g @11ty/eleventy
          npm install -g markdown-toc

      - name: Generate table of contents
        run: markdown-toc -i README.md

      - name: Build documentation
        run: |
          if [ -f "docs/build.js" ]; then
            node docs/build.js
          fi

      - name: Deploy to GitHub Pages
        if: github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_site

  # Release Management
  release:
    runs-on: ubuntu-latest
    needs: [compile-test, validate-template]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from typst.toml
        id: get_version
        run: |
          VERSION=$(grep '^version' typst.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## Changes in this release
            - Updated to Typst ${{ steps.get_version.outputs.version }}
            - Improved template structure and documentation
            - Enhanced CI/CD pipeline
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            thesis.pdf
            thesis.typ
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
